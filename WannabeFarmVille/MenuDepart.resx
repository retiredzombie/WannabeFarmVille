<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        OBhWAAAAAElFTkSuQmCC
</value>
  </data>
</root>